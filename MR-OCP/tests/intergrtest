#!/usr/bin/env python

# Copyright 2014 Open Connectome Project (http://openconnecto.me)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# intergrtest
# Created by Disa Mhembere on 2013-06-03.
# Email: disa@jhu.edu

"""
Test to insure all scripts in the module do not throw
compile time errrors
"""
import os
import subprocess
from computation.utils.file_util import recursive_listdir
import sys

BASE_DIR = os.path.abspath("../") 
testdirs = [os.path.join(BASE_DIR, "MR-OCP","MROCPdjango"),
    os.path.join(BASE_DIR, "MR-OCP", "mrcap"),
    ]
testignore = ["example-alg", "README", "setup.py", 
    os.path.join(BASE_DIR, "MR-OCP","MROCPdjango", "ocpipeline"), "check_fibers.py"]

def test():
  """
  The testing function traverses all modules for compilation
  errrors
  """

  todo = None
  for dirs in testdirs:
    for file in recursive_listdir(dirs):
        if os.path.basename(file) in testignore or os.path.dirname(file) in testignore:
          continue

        if os.path.splitext(file)[1] == ".py" or ( os.path.splitext(file)[1] == ""  and not file[-2:] == "cc"):
          print "compiling %s ..." % file
          if os.path.basename(file) in ["makefile", "Makefile"]:
            v = subprocess.call(["cd", os.path.dirname(file), ";", "make"]) 
          else:
            v = subprocess.call(["python", file, "-h"])

          if v == 0:
            print "=====> %s compile SUCCESS!\n" % file
          else:
            print "**[ERROR]: %s compile FAILED!***\n\n" % file
            print "Continue to run test on remaining scripts ? yes or no ?"

            todo = sys.stdin.readline().strip()
            if todo == "n" or todo == "no":
              print "[ERROR message]: Remaining tests not run. Please correct error & rerun the testscript."
              sys.exit(-1)

  if not todo:
    print "\n**Congratulations! Your package is fully operational. All tests completed successfully!**\n\n"
  else:
    print "\n**[ERROR message]: Tests completed with errors. Please check which scripts failed and rerun the test.**\n\n"


if __name__ == '__main__':
  test()
